-- ** eliminar tabelas se existentes **
-- CASCADE CONSTRAINTS para eliminar as restrições de integridade das chaves primárias e chaves únicas
-- PURGE elimina a tabela da base de dados e da "reciclagem"
DROP TABLE codigos_postais          CASCADE CONSTRAINTS PURGE;
DROP TABLE especialidades           CASCADE CONSTRAINTS PURGE;
DROP TABLE medicamentos             CASCADE CONSTRAINTS PURGE;
DROP TABLE medicos                  CASCADE CONSTRAINTS PURGE;
DROP TABLE pacientes                CASCADE CONSTRAINTS PURGE;
DROP TABLE consultas                CASCADE CONSTRAINTS PURGE;
DROP TABLE medicamentos_receitados  CASCADE CONSTRAINTS PURGE;

-- ## tabela Especialidades ##
CREATE TABLE especialidades(
    id_especialidade INTEGER       CONSTRAINT pk_especialidades_id_especialidade PRIMARY KEY,
    designacao       VARCHAR2(20)  CONSTRAINT nn_especialidades_designacao       NOT NULL
);

-- ## tabela Medicos ##
CREATE TABLE medicos(
    id_medico         INTEGER       CONSTRAINT pk_medicos_id_medico         PRIMARY KEY,
    id_especialidade  INTEGER       CONSTRAINT nn_medicos_id_especialidade  NOT NULL,
    id_medico_chefe   INTEGER,       
    nome              VARCHAR2(20)  CONSTRAINT nn_medicos_nome              NOT NULL,
    hospital          VARCHAR2(20),

    data_nascimento   DATE          CONSTRAINT nn_medicos_data_nascimento   NOT NULL,
    cod_postal        VARCHAR(8)
    
);

-- ## tabela Pacientes ##
CREATE TABLE pacientes(
    id_paciente     INTEGER         CONSTRAINT pk_pacientes_id_paciente       PRIMARY KEY,
    nome            VARCHAR2(20)    CONSTRAINT nn_pacientes_nome              NOT NULL,
    data_nascimento DATE            CONSTRAINT nn_pacientes_data_nascimento   NOT NULL,
    cod_postal      VARCHAR(8)
);

-- ## tabela Consultas ## 
CREATE TABLE consultas(
    id_consulta INTEGER  CONSTRAINT pk_consultas_id_consultas  PRIMARY KEY,
    data_hora   DATE     CONSTRAINT nn_consultas_data_hora     NOT NULL,
    id_medico   INTEGER  CONSTRAINT nn_consultas_id_medico     NOT NULL,
    id_paciente INTEGER  CONSTRAINT nn_consultas_id_paciente   NOT NULL,
    CONSTRAINT uk_consultas_data_hora_id_medico UNIQUE (data_hora,id_medico)
);

-- ## tabela Medicamentos ##
CREATE TABLE medicamentos(
    id_medicamento   INTEGER       CONSTRAINT pk_medicamentos_id_medicamento PRIMARY KEY,
    nome             VARCHAR2(20)  CONSTRAINT nn_medicamentos_nome           NOT NULL,
    laboratorio      VARCHAR2(20)  CONSTRAINT nn_medicamentos_laboratorio    NOT NULL
);

-- ## tabela Medicamentos_Receitados ## 
CREATE TABLE medicamentos_receitados(
    id_consulta    INTEGER,
    id_medicamento INTEGER,
    CONSTRAINT pk_medicamentos_receitas_id_consulta_id_medicamento PRIMARY KEY (id_consulta, id_medicamento)
);

-- ## tabela Codigos_Postais ##
CREATE TABLE codigos_postais(
    cod_postal  VARCHAR(8)     CONSTRAINT pk_codigos_postais_cod_postal PRIMARY KEY
                               CONSTRAINT ck_codigos_postais_cod_postal CHECK( REGEXP_LIKE(cod_postal,'\d{4}-\d{3}') ),         
    localidade  VARCHAR2(20)   CONSTRAINT nn_codigos_postais_localidade NOT NULL    
);

-- ** alterar tabelas para definição de chaves estrangeiras **
ALTER TABLE medicos ADD CONSTRAINT fk_medicos_cod_postal       
                            FOREIGN KEY (cod_postal) REFERENCES codigos_postais (cod_postal);
ALTER TABLE medicos ADD CONSTRAINT fk_medicos_id_especialidade 
                            FOREIGN KEY (id_especialidade) REFERENCES especialidades (id_especialidade);
ALTER TABLE medicos ADD CONSTRAINT fk_medicos_id_medico_chefe       
                            FOREIGN KEY (id_medico_chefe) REFERENCES medicos (id_medico);

ALTER TABLE medicamentos_receitados ADD CONSTRAINT fk_medicamentos_receitados_id_consultas   
                                            FOREIGN KEY (id_consulta) REFERENCES consultas (id_consulta);
ALTER TABLE medicamentos_receitados ADD CONSTRAINT fk_medicamentos_receitados_id_medicamento 
                                            FOREIGN KEY (id_medicamento) REFERENCES medicamentos (id_medicamento);

ALTER TABLE pacientes ADD CONSTRAINT fk_pacientes_cod_postal FOREIGN KEY (cod_postal)  REFERENCES codigos_postais (cod_postal);

ALTER TABLE consultas ADD CONSTRAINT fk_consultas_id_medico  FOREIGN KEY (id_medico)   REFERENCES medicos (id_medico);
ALTER TABLE consultas ADD CONSTRAINT fk_consultas_paciente   FOREIGN KEY (id_paciente) REFERENCES pacientes (id_paciente);

--se necessário por causa de problemas com o  REGEXP_LIKE
--ALTER SESSION SET NLS_SORT=BINARY;


-- ** inserir dados nas tabelas **

-- ## tabela Codigo_Postais ##
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('2580-631', 'Alenquer');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('2720-465', 'Alverca');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4600-012', 'Amarante');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4750-264', 'Barcelos');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('2750-040', 'Cascais');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4445-622', 'Ermesinde');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4420-584', 'Gondomar');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4420-282', 'Gondomar');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('1500-103', 'Lisboa');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('1099-052', 'Lisboa');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('1070-204', 'Lisboa');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4470-208', 'Maia');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4450-718', 'Matosinhos');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4450-227', 'Matosinhos');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4454-510', 'Matosinhos');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('2781-902', 'Oeiras');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4200-197', 'Porto');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4100-079', 'Porto');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4100-217', 'Porto');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4200-058', 'Porto');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4150-706', 'Porto');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4350-043', 'Porto');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4050-078', 'Porto');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4490-567', 'P voa do Varzim');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4460-393', 'Senhora da Hora');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4440-501', 'Valongo');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4481-908', 'Vila do Conde');
INSERT INTO codigos_postais(cod_postal, localidade) VALUES ('4400-356', 'Vila Nova de Gaia');

-- ## tabela Especialidades ##
INSERT INTO especialidades(id_especialidade, designacao) VALUES (1, 'Pediatria');        
INSERT INTO especialidades(id_especialidade, designacao) VALUES (2, 'Cardiologia');      
INSERT INTO especialidades(id_especialidade, designacao) VALUES (3, 'Oftalmologia');     
INSERT INTO especialidades(id_especialidade, designacao) VALUES (4, 'Dermotologia');     

-- ## tabela Pacientes ##
INSERT INTO pacientes(id_paciente, nome, data_nascimento, cod_postal) 
     VALUES (1, 'Alfredo Gama',    TO_DATE('12-08-2003','dd-mm-yyyy'), '4454-510');
INSERT INTO pacientes(id_paciente, nome, data_nascimento, cod_postal) 
     VALUES (2, 'Cec lia Mendes',  TO_DATE('31-10-2007','dd-mm-yyyy'), '4460-393');
INSERT INTO pacientes(id_paciente, nome, data_nascimento, cod_postal) 
     VALUES (3, 'Carolina Santos', TO_DATE('26-05-2013','dd-mm-yyyy'), '4460-393');
INSERT INTO pacientes(id_paciente, nome, data_nascimento, cod_postal) 
     VALUES (4, 'Daniela Seabra',  TO_DATE('05-06-2013','dd-mm-yyyy'), '4454-510');
INSERT INTO pacientes(id_paciente, nome, data_nascimento, cod_postal) 
     VALUES (5, 'Laura Barbosa',   TO_DATE('07-07-2000','dd-mm-yyyy'), '2750-040');
INSERT INTO pacientes(id_paciente, nome, data_nascimento, cod_postal) 
     VALUES (6, 'Paulo Barbosa',   TO_DATE('13-02-1953','dd-mm-yyyy'), '4460-393');

-- ## tabela Medicos ##
-- ** m dicos chefe **
-- *** Hospital Pedro Hispano ***
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (1, 2, NULL, 'Abel Santos',   'Pedro Hispano', TO_DATE('05-09-1973','dd-mm-yyyy'), '4200-197');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (2, 1, NULL, 'Adriana Sousa', 'Pedro Hispano', TO_DATE('23-03-1970','dd-mm-yyyy'), '4481-908');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (3, 4, NULL, 'Adriano Reis',  'Pedro Hispano', TO_DATE('07-07-1963','dd-mm-yyyy'), '4445-622');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (4, 3, NULL, 'Carla Dias',    'Pedro Hispano', TO_DATE('28-02-1960','dd-mm-yyyy'), '4460-393');
-- *** Hospital Santa Maria ***
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (5, 2, NULL, 'Ant nio Coelho',   'Santa Maria', TO_DATE('02-02-1976','dd-mm-yyyy'), '1500-103');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (6, 1, NULL, 'Alvaro Dunas',     'Santa Maria', TO_DATE('15-06-1970','dd-mm-yyyy'), '1099-052');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (7, 4, NULL, 'Manuela Silva',    'Santa Maria', TO_DATE('01-01-1958','dd-mm-yyyy'), '1070-204');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (8, 3, NULL, 'Ant nio Oliveira', 'Santa Maria', TO_DATE('16-04-1956','dd-mm-yyyy'), '2580-631');
-- *** Hospital Santo Ant nio ***
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (9,  2, NULL, 'Catarina Dolores',  'Santo Ant nio', TO_DATE('09-11-1954','dd-mm-yyyy'), '4100-079');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (10, 1, NULL, 'Benjamim Mateus',   'Santo Ant nio', TO_DATE('12-12-1958','dd-mm-yyyy'), '4100-217');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (11, 4, NULL, 'Francisco Cardoso', 'Santo Ant nio', TO_DATE('11-09-1958','dd-mm-yyyy'), '4450-718');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (12, 3, NULL, 'D bora Brand o',    'Santo Ant nio', TO_DATE('05-06-1961','dd-mm-yyyy'), '4420-584');
-- *** Hospital S o Jo o ***
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (13, 2, NULL, 'Am lia Silva',   'S o Jo o', TO_DATE('17-05-1968','dd-mm-yyyy'), '4150-706');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (15, 4, NULL, 'Marcos Marcelo', 'S o Jo o', TO_DATE('28-05-1961','dd-mm-yyyy'), '4350-043');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal) 
     VALUES (16, 3, NULL, 'Nicolau Vieira', 'S o Jo o', TO_DATE('11-09-1968','dd-mm-yyyy'), '4600-012');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal)  
     VALUES (26, 2, 13, 'Angelo Rodrigo',   'S o Jo o', TO_DATE('02-02-1973','dd-mm-yyyy'), '4420-282');

-- ** m dicos n o-chefe **
-- *** Hospital Pedro Hispano ***
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal)  
     VALUES (17, 2, 1, 'Ana Moura',       'Pedro Hispano', TO_DATE('13-08-1985','dd-mm-yyyy'), '4454-510');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal)  
     VALUES (18, 1, 2, 'Artur Rocha',     'Pedro Hispano', TO_DATE('25-01-1978','dd-mm-yyyy'), '4490-567');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal)  
     VALUES (19, 4, 3, 'Cl udia Martins', 'Pedro Hispano', TO_DATE('17-05-1968','dd-mm-yyyy'), '4400-356');
-- *** Hospital Santa Maria ***
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal)  
     VALUES (20, 2, 5, 'Carina Pinto',      'Santa Maria', TO_DATE('27-08-1980','dd-mm-yyyy'), '2750-040');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal)  
     VALUES (21, 4, 7, 'Nelson Vit ria',    'Santa Maria', TO_DATE('03-09-1961','dd-mm-yyyy'), '2781-902');
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal)  
     VALUES (22, 3, 8, 'Patr cia Carvalho', 'Santa Maria', TO_DATE('12-03-1980','dd-mm-yyyy'), '2720-465');
-- *** Hospital Santo Ant nio ***
INSERT INTO medicos(id_medico, id_especialidade, id_medico_chefe, nome, hospital, data_nascimento, cod_postal)  
     VALUES (25, 3, 12, 'M rio Nascimento', 'Santo Ant nio', TO_DATE('13-03-1968','dd-mm-yyyy'), '4440-501');

-- ## tabela Consultas ##
-- ** Paciente Alfredo Gama **
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (1, TO_DATE('25-09-2009 10:10', 'dd-mm-yyyy hh24:mi'), 2, 1);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (2, TO_DATE('03-09-2012 14:30', 'dd-mm-yyyy hh24:mi'), 2, 1);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (3, TO_DATE('12-05-2016 15:00', 'dd-mm-yyyy hh24:mi'), 2, 1);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (4, TO_DATE('23-09-2019 10:30', 'dd-mm-yyyy hh24:mi'), 2, 1);
-- ** Paciente Cec lia Mendes **
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (5, TO_DATE('08-03-2016 15:30', 'dd-mm-yyyy hh24:mi'), 17, 2);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (6, TO_DATE('23-09-2019 15:30', 'dd-mm-yyyy hh24:mi'), 18, 2);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (7, TO_DATE('28-09-2019 15:30', 'dd-mm-yyyy hh24:mi'), 19, 2);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (8, TO_DATE('25-09-2019 15:30', 'dd-mm-yyyy hh24:mi'),  4, 2);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (9, TO_DATE('07-10-2019 10:30', 'dd-mm-yyyy hh24:mi'), 18, 2);
-- ** Paciente Carolina Santos **
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (10, TO_DATE('15-03-2018 16:30', 'dd-mm-yyyy hh24:mi'),  1, 3);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (11, TO_DATE('10-10-2018 09:30', 'dd-mm-yyyy hh24:mi'), 17, 3);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (12, TO_DATE('10-10-2018 12:30', 'dd-mm-yyyy hh24:mi'),  2, 3);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (13, TO_DATE('10-10-2018 14:00', 'dd-mm-yyyy hh24:mi'),  3, 3);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (14, TO_DATE('11-10-2018 10:00', 'dd-mm-yyyy hh24:mi'),  4, 3);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (15, TO_DATE('12-10-2018 16:30', 'dd-mm-yyyy hh24:mi'), 19, 3);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (16, TO_DATE('07-10-2019 11:30', 'dd-mm-yyyy hh24:mi'), 18, 3);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (17, TO_DATE('07-10-2019 14:00', 'dd-mm-yyyy hh24:mi'), 19, 3);
-- ** Paciente Daniela Seabra **
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (18, TO_DATE('05-05-2018 16:00', 'dd-mm-yyyy hh24:mi'),  1, 4);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (19, TO_DATE('09-10-2018 10:30', 'dd-mm-yyyy hh24:mi'),  1, 4);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (20, TO_DATE('10-10-2018 14:30', 'dd-mm-yyyy hh24:mi'),  2, 4);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (21, TO_DATE('10-10-2018 15:00', 'dd-mm-yyyy hh24:mi'),  3, 4);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (22, TO_DATE('11-10-2018 11:00', 'dd-mm-yyyy hh24:mi'),  4, 4);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (23, TO_DATE('13-10-2018 15:30', 'dd-mm-yyyy hh24:mi'), 19, 4);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (24, TO_DATE('08-10-2019 11:30', 'dd-mm-yyyy hh24:mi'), 18, 4);
-- ** Paciente Laura Barbosa **
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (25, TO_DATE('15-03-2014 16:30', 'dd-mm-yyyy hh24:mi'),  5, 5);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (26, TO_DATE('10-10-2018 09:30', 'dd-mm-yyyy hh24:mi'), 20, 5);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (27, TO_DATE('15-09-2019 16:00', 'dd-mm-yyyy hh24:mi'),  5, 5);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (28, TO_DATE('05-10-2019 09:00', 'dd-mm-yyyy hh24:mi'), 20, 5);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (29, TO_DATE('10-10-2018 12:30', 'dd-mm-yyyy hh24:mi'),  6, 5);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (30, TO_DATE('07-10-2019 11:30', 'dd-mm-yyyy hh24:mi'),  6, 5);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (31, TO_DATE('01-09-2019 14:00', 'dd-mm-yyyy hh24:mi'),  7, 5);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (32, TO_DATE('08-10-2018 16:30', 'dd-mm-yyyy hh24:mi'), 21, 5);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (34, TO_DATE('08-08-2019 12:00', 'dd-mm-yyyy hh24:mi'), 21, 5);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (33, TO_DATE('11-10-2018 10:00', 'dd-mm-yyyy hh24:mi'),  8, 5);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (35, TO_DATE('05-10-2019 14:00', 'dd-mm-yyyy hh24:mi'), 22, 5);
-- ** Paciente Paulo Barbosa **
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (37, TO_DATE('11-11-2010 14:30', 'dd-mm-yyyy hh24:mi'), 13, 6);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (38, TO_DATE('22-08-2015 09:30', 'dd-mm-yyyy hh24:mi'), 15, 6);
INSERT INTO consultas(id_consulta, data_hora, id_medico, id_paciente) 
     VALUES (39, TO_DATE('15-04-2016 14:00', 'dd-mm-yyyy hh24:mi'), 13, 6);

-- ## tabela Medicamentos ##
INSERT INTO medicamentos(id_medicamento, nome, laboratorio) VALUES (1, 'Aspirina',  'Bayer');
INSERT INTO medicamentos(id_medicamento, nome, laboratorio) VALUES (2, 'Voltaren',  'Novartis');
INSERT INTO medicamentos(id_medicamento, nome, laboratorio) VALUES (3, 'Aspegic',   'Infarmed');
INSERT INTO medicamentos(id_medicamento, nome, laboratorio) VALUES (4, 'Kompensan', 'Infarmed');
INSERT INTO medicamentos(id_medicamento, nome, laboratorio) VALUES (5, 'Benuron',   'Infarmed');
INSERT INTO medicamentos(id_medicamento, nome, laboratorio) VALUES (6, 'Xanax',     'Pfizer');
INSERT INTO medicamentos(id_medicamento, nome, laboratorio) VALUES (7, 'Risidon',   'Infarmed');

-- ## tabela Medicamentos_Receitados ##
-- ** Consulta 1 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (1, 1); 
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (1, 3); 
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (1, 2); 
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (1, 4); 
-- ** Consulta 2 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (2, 1);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (2, 4);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (2, 5); 
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (2, 3);
-- ** Consulta 3 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (3, 1);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (3, 3);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (3, 5);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (3, 4);
-- ** Consulta 4 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (4, 4);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (4, 5);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (4, 7);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (4, 6);
-- ** Consulta 5 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (5, 1);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (5, 2);
-- ** Consulta 6 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (6, 1);
-- ** Consulta 7 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (7, 2);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (7, 3);
-- ** Consulta 9 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (9, 2);
-- ** Consulta 10 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (10, 4);
-- ** Consulta 12 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (12, 1);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (12, 2);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (12, 3);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (12, 4);
-- ** Consulta 16 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (16, 3);
-- ** Consulta 20 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (20, 1);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (20, 2);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (20, 3);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (20, 4);
-- ** Consulta 21 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (21, 1);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (21, 2);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (21, 3);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (21, 4);
-- ** Consulta 22 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (22, 3);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (22, 4);
-- ** Consulta 24 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (24, 2);
-- ** Consulta 25 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (25, 1);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (25, 2);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (25, 3);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (25, 4);
-- ** Consulta 29 **
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (29, 1);
INSERT INTO medicamentos_receitados(id_consulta, id_medicamento) VALUES (29, 2);


--------------------------------------------------------------------------------------------------------------------------------------------------

1) Mostrar o nome dos médicos com consultas antes de 04/05/2011. O resultado deve ser apresentado
por ordem alfabética do nome dos médicos.


SELECT DISTINCT m.nome
FROM Medicos m
INNER JOIN Consultas c ON m.id_medico = c.id_medico
WHERE c.data_hora < TO_DATE('04-05-2011 00:00', 'dd-mm-yyyy hh24:mi')
ORDER BY m.nome;

2) Mostrar o nome, a designação da especialidade e a localidade dos médicos do Hospital de São João.
O resultado deve ser apresentado por ordem alfabética do nome dos médicos.

Select m.nome, e.designacao, cp.localidade
from medicos m
inner join especialidades e ON m.id_especialidade=e.id_especialidade
inner join codigos_postais cp ON m.cod_postal=cp.cod_postal
Where m.hospital= 'S o Jo o'
Order by nome;


3) Mostrar o nome dos médicos que têm mais de 50 anos e que deram consultas a partir das 12H00 a
pacientes que têm menos de 20 anos. O resultado deve ser apresentado por ordem alfabética do
nome dos médicos.


SELECT DISTINCT m.nome
FROM medicos m
INNER JOIN consultas c ON m.id_medico = c.id_medico
INNER JOIN pacientes p ON c.id_paciente = p.id_paciente
WHERE TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(TO_CHAR(m.data_nascimento, 'YYYY')) > 50  -- Médicos com mais de 50 anos
AND TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(TO_CHAR(p.data_nascimento, 'YYYY')) < 20  -- Pacientes com menos de 20 anos
AND TO_NUMBER(TO_CHAR(c.data_hora, 'HH24')) >= 12  -- Consultas a partir das 12h
ORDER BY m.nome;


4) Mostrar o nome dos médicos cujo número total de medicamentos receitados é superior a 5. O
resultado deve ser apresentado por ordem alfabética do nome dos médicos.

SELECT m.nome 
FROM medicos m
INNER JOIN consultas c ON m.id_medico = c.id_medico
INNER JOIN medicamentos_receitados mr ON mr.id_consulta=c.id_consulta
GROUP BY m.nome
HAVING COUNT(mr.id_medicamento)>5
ORDER BY m.nome; 


5) Mostrar o nome e o hospital dos médicos de Pediatria que consultaram pacientes cuja localidade é
Matosinhos. O resultado deve ser apresentado por ordem alfabética do nome dos médicos.

SELECT m.nome, m.hospital
FROM medicos m
INNER JOIN especialidades e ON m.id_especialidade=e.id_especialidade
INNER JOIN consultas c ON m.id_medico=c.id_medico
INNER JOIN pacientes p ON c.id_paciente=p.id_paciente
INNER JOIN codigos_postais cp ON p.cod_postal=cp.cod_postal
WHERE e.designacao='Pediatria' AND cp.localidade='Matosinhos'
ORDER BY m.nome;



6) Mostrar o nome dos médicos que nunca deram consultas ao paciente Alfredo Gama. O resultado deve
apresentado por ordem alfabética da designação da especialidade.

SELECT DISTINCT m.nome, e.designacao
FROM medicos m
INNER JOIN especialidades e ON m.id_especialidade = e.id_especialidade
LEFT JOIN consultas c ON m.id_medico = c.id_medico
LEFT JOIN pacientes p ON c.id_paciente = p.id_paciente AND p.nome = 'Alfredo Gama'
WHERE p.id_paciente IS NULL
ORDER BY e.designacao;



7) Mostrar o nome dos médicos que receitaram mais de 3 medicamentos em cada uma das suas
consultas. O resultado deve ser apresentado por ordem alfabética do nome dos médicos.


SELECT DISTINCT m.nome
FROM medicos m
INNER JOIN consultas c ON m.id_medico=c.id_medico 
INNER JOIN medicamentos_receitados mr ON c.id_consulta=mr.id_consulta
GROUP BY m.id_medico, c.id_consulta, m.nome
HAVING COUNT(mr.id_medicamento)>3
ORDER BY m.nome;


8) Mostrar o nome e o hospital dos médicos de Cardiologia que não realizaram consultas entre fevereiro
e maio de 2016. O resultado deve ser apresentado por ordem alfabética do nome dos médicos.

SELECT DISTINCT m.nome, m.hospital
FROM medicos m
INNER JOIN especialidades e ON m.id_especialidade = e.id_especialidade
LEFT JOIN consultas c ON m.id_medico = c.id_medico
AND c.data_hora BETWEEN TO_DATE('01-02-2016', 'DD-MM-YYYY') 
                    AND TO_DATE('31-05-2016', 'DD-MM-YYYY')
WHERE e.designacao = 'Cardiologia'
AND c.id_consulta IS NULL
ORDER BY m.nome;


9) Mostrar o nome dos pacientes que só foram consultados no hospital São João. O resultado deve ser apresentado por ordem alfabética do nome dos pacientes.

SELECT DISTINCT p.nome
FROM  pacientes p
INNER JOIN consultas c ON p.id_paciente=c.id_paciente
INNER JOIN medicos m ON m.id_medico=c.id_medico
WHERE m.hospital='S o Jo o'
ORDER BY p.nome;


10) Mostrar a data, a hora e a designação das especialidades com consultas realizadas depois das 12H30, entre o período de 01-01-2024 a 01-06-2024. A coluna “OBS.” deve indicar as consultas efetuadas ao fim de semana. O resultado deve ser apresentado por ordem descendente da data e por ordem ascendente da hora. O comando deve usar a expressão CASE que permite aplicar uma lógica semelhante à da estrutura de decisão “SWITCH” do JAVA.

SELECT 
    TO_CHAR(c.data_hora, 'DD-MM-YYYY') AS data_consulta, 
    TO_CHAR(c.data_hora, 'HH24:MI') AS hora_consulta,
    e.designacao AS especialidade,
    CASE 
        WHEN TO_CHAR(c.data_hora, 'D') IN ('1', '7') THEN 'Fim de semana'
        ELSE ''
    END AS OBS
FROM consultas c
INNER JOIN medicos m ON c.id_medico = m.id_medico
INNER JOIN especialidades e ON m.id_especialidade = e.id_especialidade
WHERE c.data_hora BETWEEN TO_DATE('01-01-2024', 'DD-MM-YYYY') 
                      AND TO_DATE('01-06-2024', 'DD-MM-YYYY')
AND TO_CHAR(c.data_hora, 'HH24:MI') > '12:30'
ORDER BY c.data_hora DESC, TO_CHAR(c.data_hora, 'HH24:MI') ASC;


11) Mostrar o nome e a especialidade dos médicos que não tiveram consultas no mês de janeiro do ano de 2023. No caso de o médico não ter realizado qualquer consulta, deve ser apresentada a informação "sem consultas", numa coluna intitulada “OBS.” O resultado deve ser apresentado por ordem alfabética do nome do médico. O comando deve usar a função NVL2 que permite aplicar uma lógica semelhante à da estrutura de decisão “IF-THEN-ELSE”. Tal como a função NVL, a função NVL2 verifica se o valor da expressão é igual a NULL.

SELECT DISTINCT m.nome, e.designacao AS especialidade,
       NVL2(c.id_consulta, '', 'sem consultas') AS OBS
FROM medicos m
INNER JOIN especialidades e ON m.id_especialidade = e.id_especialidade
LEFT JOIN consultas c ON m.id_medico = c.id_medico 
AND EXTRACT(YEAR FROM c.data_hora) = 2023 
AND EXTRACT(MONTH FROM c.data_hora) = 1
WHERE c.id_consulta IS NULL
ORDER BY m.nome;


12) Mostrar o nome, a data de nascimento e a idade dos médicos cuja idade é uma das três mais novas.
O resultado deve ser apresentado por ordem ascendente da idade do médico. O comando deve usar a cláusula FETCH que permite especificar o número de linhas retornadas por uma query.

SELECT nome, data_nascimento, 
       FLOOR(MONTHS_BETWEEN(SYSDATE, data_nascimento) / 12) AS idade
FROM medicos
ORDER BY idade ASC
FETCH FIRST 3 ROWS ONLY;
