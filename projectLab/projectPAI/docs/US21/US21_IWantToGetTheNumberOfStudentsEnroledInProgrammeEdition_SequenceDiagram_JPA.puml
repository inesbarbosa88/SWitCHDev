@startuml US21

skinparam ParticipantBackgroundColor #application
skinparam SequenceLifeLineBackgroundColor #application
skinparam RefBorderColor #application

actor ASC
participant UI
participant ":IWantToKnowTheNumberOfStudents\nEnrolledInAProgrammeEditionController" as CTR
participant ":ProgrammeEditionEnrolmentService"
participant ":ProgrammeEditionEnrolmentSpringData" as SpringData
participant ":ProgrammeEditionEnrolmentMapper"
participant ":ProgrammeEditionEnrolmentFactory"
participant "programmeEditionList1"
autonumber
skinparam titleFontSize 18

title: SEQUENCE DIAGRAM\nUS21_GET THE NUMBER OF STUDENTS ENROLLED IN A PROGRAMME EDITION (HAPPY PATH)

ASC -> UI ++ : I want to get the number of students enrolled in a programme edition!
UI -> CTR ++: getAllProgrammeEditions()
CTR -> SpringData ++: findAll()
SpringData --> CTR --: Iterable<programmeEditionList1>
CTR --> UI --: Iterable<programmeEditionList1>
UI --> ASC -- : Which Programme Edition?
ASC -> UI ++ : programmeEdition1
UI -> CTR ++ : getTheNumberOfStudentsEnrolledInAProgrammeEdition(programmeEdition1ID)

CTR -> ":ProgrammeEditionEnrolmentService" ++: totalStudentsInProgrammeEdition(programmeEdition1ID)
":ProgrammeEditionEnrolmentService" -> SpringData ++: getAllProgrammeEditionsEnrolmentByProgrammeEditionID(programmeEdition1ID)
SpringData -> ":ProgrammeEditionIDMapper" ++: toDataModel(programmeEdition1ID)
":ProgrammeEditionIDMapper" --> SpringData --: programmeEdition1IdDataModel
SpringData -> SpringData : findAllBy_id_ProgrammeEditionIdDataModel(programmeEdition1IdDataModel)

loop for each ProgrammeEditionEnrolmentDataModel
    SpringData -> ":ProgrammeEditionEnrolmentMapper" ++: toDomain(programmeEditionEnrolmentDataModel)
    ":ProgrammeEditionEnrolmentMapper" -> ":ProgrammeEditionEnrolmentFactory"++: newProgrammeEditionEnrolment(StudentID studentId, ProgrammeEditionID programmeEditionId)
    create "pEE1:ProgrammeEditionEnrolment" as ProgrammeEditionEnrolment1
    ":ProgrammeEditionEnrolmentFactory" -> ProgrammeEditionEnrolment1: <create>
    ":ProgrammeEditionEnrolmentFactory" --> ":ProgrammeEditionEnrolmentMapper": Optional<pEE1>
    ":ProgrammeEditionEnrolmentMapper" --> SpringData --: Optional<pEE1>
    SpringData -> SpringData: add to List<ProgrammeEditionEnrolment>
end

SpringData --> ":ProgrammeEditionEnrolmentService" --: List<ProgrammeEditionEnrolment>
ref over ":ProgrammeEditionEnrolmentService"
    Count total programmeEditionEnrolments
    1. Get list size
    2. Return total
end ref

":ProgrammeEditionEnrolmentService" --> CTR --: int
CTR --> UI --: int
UI --> ASC --: Total of Students Enrolled in the specified ProgrammeEdition

@enduml