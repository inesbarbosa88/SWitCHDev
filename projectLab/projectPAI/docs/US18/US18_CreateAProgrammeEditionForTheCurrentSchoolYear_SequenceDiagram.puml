@startuml
title : US18_Create A Programme Edition For The Current School Year
autonumber
Actor ASC

participant ":UI" as UI
participant ":CreateAProgrammeEditionForTheCurrentSchoolYearController" as CPEC
participant ":ProgrammeService" as PS
participant ":ProgrammeRepository" as PR
participant ":SchoolYearService" as SYS
participant ":SchoolYearRepository" as SYR
participant ":ProgrammeEditionService" as PES
participant ":ProgrammeEditionFactory" as PEF
participant ":ProgrammeEditionRepository" as PER

'get all programmes name
ASC -> UI ++ #application : I want to create a programme edition for the current school year
UI -> CPEC ++ #application : getAllProgrammes()
CPEC -> PS ++ #application : getAllProgrammes()
PS -> PR ++ #application : findAllProgrammes()
ref over PR
    convert DataModel to Domain
    List<Programme>
end ref
PR --> PS -- : programmeList
PS --> CPEC -- : programmeList
CPEC --> UI -- : programmeList
UI -> ASC --  : Which Programme?
'''''''''''''''''''''''''''''''''''''''''

ASC -> UI ++ #application : Licenciatura Engenharia InformÃ¡tica
UI -> CPEC ++ #application : createAProgrammeEditionForTheCurrentSchoolYear(programme)

'get programmeID
CPEC -> PS ++ #application : findProgrammeIDByProgramme(programme)
PS -> PR ++ #application : findProgrammeIDByProgramme(programme)
ref over PR
    convert DataModel to Domain
    toDomain(programmeIDDataModel)
end ref
PR --> PS -- : Optional.of(programmeID)
PS --> CPEC -- : programmeID
'''''''''''''''''''''''''''''

'get current School Year
CPEC -> SYS ++ #application : getCurrentSchoolYearId()
SYS -> SYR ++ #application : getCurrentSchoolYear()
ref over SYR
    convert DataModel to Domain
    toDomain(schoolYearDataModel)
end ref
SYR --> SYS -- : Optional.of(schoolYear)
SYS --> CPEC -- : Optional.of(schoolYearID)
'''''''''''''''''''''''''''

'create programmeEdition for current School Year
CPEC -> PES ++ #application :createProgrammeEdition(programmeID, schoolYearID)
PES -> PEF ++ #application : createProgrammeEdition(programmeID, schoolYearID)

create "programmeEditionID:ProgrammeEditionID" as PEID
PEF -> PEID : <create> ()
create "programmeEdition:ProgrammeEdition" as PE
PEF -> PE : <create> (programmeEditionID, programmeID, schoolYearID)

PEF --> PES -- : programmeEdition
PES --> PER ++ #application : saveProgrammeEdition
ref over PER
    verifies if ProgrammeEdition already exists in the repository
    convert Domain to DataModel
    saves programmeEdition DataModel
end ref
'PER -> PER : isProgrammeEditionAlreadyRegistered (programmeEdition)
'PER -> PER : add (programmeEdition)
PER --> PES -- : programmeEditionSaved
PES --> CPEC -- : Optional.of(programmeEditionSaved)
CPEC --> UI : programmeEditionSaved
UI --> ASC -- : Programme Edition created for the current school year!
participant "programmeIDMapper:IProgrammeIDMapper"
participant "programmeNameList:List<NameWithNumbersAndSpecialChars>"
participant "programmeName:NameWithNumbersAndSpecialChars"
participant "programmeID:ProgrammeID"
participant "schoolYearID:SchoolYearID"
@enduml