@startuml
title US16: Enrol a student in a course edition
autonumber

actor ASC
participant ":UI" as UI
ASC -> UI: I want to enrol a student in a course edition!
activate UI #ddfada
UI --> ASC: What Student?
deactivate UI

ASC -> UI: Enter the student!
activate UI #ddfada
participant ":US16_EnrolAStudentInACourseEditionController" as Controller
UI -> Controller: findProgrammeEditionsThatStudentIsEnrolled (student)
activate Controller #ddfada
participant ":IProgrammeEditionEnrolmentRepository" as ProgrammeEditionEnrolmentRepository
Controller -> ProgrammeEditionEnrolmentRepository: findProgrammeEditionsThatStudentIsEnrolled (student)
activate ProgrammeEditionEnrolmentRepository #ddfada
create ":ProgrammeEditionList"
ProgrammeEditionEnrolmentRepository -> ":ProgrammeEditionList": newArrayList()
activate ":ProgrammeEditionList" #ddfada
":ProgrammeEditionList" --> ProgrammeEditionEnrolmentRepository: EmptyList<ProgrammeEdition>
deactivate ":ProgrammeEditionList"
loop for each "pee[i]:ProgrammeEditionEnrolment" in ProgrammeEditionEnrolmentRepo
participant ":ProgrammeEditionEnrolment" as ProgrammeEditionEnrolment
ProgrammeEditionEnrolmentRepository -> ProgrammeEditionEnrolment : findStudentInProgrammeEdition (student)
activate ProgrammeEditionEnrolment #ddfada
ProgrammeEditionEnrolment --> ProgrammeEditionEnrolmentRepository : pee1
deactivate ProgrammeEditionEnrolment
ProgrammeEditionEnrolmentRepository -> ProgrammeEditionEnrolment :  findProgrammeEditionInEnrolment()
activate ProgrammeEditionEnrolment #ddfada
ProgrammeEditionEnrolment --> ProgrammeEditionEnrolmentRepository : pe1
deactivate ProgrammeEditionEnrolment
ProgrammeEditionEnrolmentRepository -> ":ProgrammeEditionList":  add (pe1)
activate ":ProgrammeEditionList" #ddfada
":ProgrammeEditionList" --> ProgrammeEditionEnrolmentRepository: True
deactivate ":ProgrammeEditionList"
end
ProgrammeEditionEnrolmentRepository --> Controller: List<ProgrammeEdition>
deactivate ProgrammeEditionEnrolmentRepository
Controller --> UI: Optional<List<ProgrammeEdition>>
deactivate Controller
UI --> ASC: Here is a list of programme editions \n         the student is enrolled in. \n        What Programme Edition?
deactivate UI

ASC -> UI:Enter the programme edition!
activate UI #ddfada
UI -> Controller: findCourseEditionsByProgrammeEdition (programmeEdition)
activate Controller #ddfada
participant ":ICourseEditionRepository" as CourseEditionRepository
Controller -> CourseEditionRepository: findCourseEditionsByProgrammeEdition (programmeEdition)
activate CourseEditionRepository #ddfada
create ":CourseEditionList"
CourseEditionRepository -> ":CourseEditionList": newArrayList ()
activate ":CourseEditionList" #ddfada
":CourseEditionList" --> CourseEditionRepository: EmptyList<CourseEdition>
deactivate ":CourseEditionList"
loop for each "ce[i]:CourseEdition" in CourseEditionRepository
participant ":CourseEdition" as CourseEdition
CourseEditionRepository -> CourseEdition :  whatProgrammeEditionBelongsThisCourseEdition()
activate CourseEdition #ddfada
CourseEdition --> CourseEditionRepository : ce1
deactivate CourseEdition
CourseEditionRepository -> ":CourseEditionList" :  add (ce1)
activate ":CourseEditionList" #ddfada
":CourseEditionList" --> CourseEditionRepository: True
deactivate ":CourseEditionList"
end
CourseEditionRepository --> Controller: List<CourseEdition>
deactivate CourseEditionRepository
Controller --> UI: List<CourseEdition>
deactivate Controller
UI --> ASC: Here is a list of Course Editions!\n         What Course Edition?
deactivate UI

ASC -> UI: Enter the course edition!
activate UI #ddfada
UI --> ASC: Sure?
deactivate UI
ASC -> UI: Yes!
activate UI #ddfada

UI -> Controller: enrolStudentInACourseEdition (student, courseEdition)
activate Controller #ddfada

participant ":ICourseEditionEnrolmentRepository" as CourseEditionEnrolmentRepository
Controller -> CourseEditionEnrolmentRepository: enrolStudentInACourseEdition (student, courseEdition)
activate CourseEditionEnrolmentRepository #ddfada
participant ":ICourseEditionEnrolmentFactory" as CourseEditionEnrolmentFactoryInterface
CourseEditionEnrolmentRepository -> CourseEditionEnrolmentFactoryInterface: createCourseEditionEnrolment (student, courseEdition)
activate CourseEditionEnrolmentFactoryInterface #ddfada
create "cee1:CourseEditionEnrolment"
CourseEditionEnrolmentFactoryInterface -> "cee1:CourseEditionEnrolment" : createCourseEditionEnrolment (student, courseEdition)
activate "cee1:CourseEditionEnrolment" #ddfada
"cee1:CourseEditionEnrolment" --> CourseEditionEnrolmentFactoryInterface: cee1
deactivate "cee1:CourseEditionEnrolment"
CourseEditionEnrolmentFactoryInterface --> CourseEditionEnrolmentRepository: cee1
deactivate CourseEditionEnrolmentFactoryInterface
participant ":CourseEditionEnrolmentSet" as CourseEditionEnrolmentSet
CourseEditionEnrolmentRepository --> CourseEditionEnrolmentSet: add (cee1)
activate CourseEditionEnrolmentSet #ddfada
CourseEditionEnrolmentSet -> CourseEditionEnrolmentRepository: True
deactivate CourseEditionEnrolmentSet
CourseEditionEnrolmentRepository --> Controller: True
deactivate CourseEditionEnrolmentRepository
Controller --> UI: True
deactivate Controller
UI --> ASC: OK!
deactivate UI

@enduml
