@startuml
!pragma layout smetana
skinparam ranksep 100
skinparam nodesep 100

package "Student Aggregate" as S {
entity "<<root>>\nStudent" {
+hasThisUniqueNumber(uniqueNumber: String)
}
}

class "<<VO>>\nUniqueNumber" {
-value: String
+hasThisUniqueNumber(value: String)
}

"<<root>>\nStudent" --> "<<VO>>\nUniqueNumber"

package "AccessMethod Aggregate" as AM {
class "<<root>>\nAccessMethod" {
+hasThisAccessMethodName(name: String)
}
}

class "<<VO>>\nAccessMethodName" {
-value: String
}

"<<root>>\nAccessMethod" --> "<<VO>>\nAccessMethodName"

package "Programme Aggregate" as P {
entity "<<root>>\nProgramme" {
+hasThisProgrammeName(name: String)
}
}

class "<<VO>>\nProgrammeName" {
-value: String
}

"<<root>>\nProgramme" --> "<<VO>>\nProgrammeName"

package "ProgrammeEnrolment Aggregate" as PE {
entity "<<root>>\nProgrammeEnrolment" {
-enrolmentDate: LocalDate
+ProgrammeEnrolment(student: Student, accessMethod: AccessMethod, programme: Programme, date: LocalDate)
+hasSameStudent(student: Student)
+hasSameEnrolment(programmeEnrolment: ProgrammeEnrolment)
+hasSameProgramme(programme: Programme)
}
}

class US09_EnrolStudentInProgrammeController {
+US09_EnrolStudentInProgrammeController(studentRepository: IStudentRepository, accessMethodRepository: IAccessMethodRepository, programmeList: IProgrammeRepository, programmeEnrolmentRepository: IProgrammeEnrolmentRepository)
+getStudentByUniqueNumber(uniqueNumber: String)
+getAccessMethodByName(accessMethod: String)
+getProgrammeByName(programmeName: String)
+enrolStudent(s1: Student, am1: AccessMethod, p1: Programme, date: String)
}

interface IStudentRepository {
+getStudentByID(uniqueNumber: String)
}

class StudentRepository {
+getStudentByID(uniqueNumber: String)
}

interface IAccessMethodRepository {
+getAccessMethodByID(name: String)
}

interface IProgrammeRepository {
+getProgrammeByID(name: String)
}

class ProgrammeEnrolmentRepository {
-programmeEnrolmentFactory: ProgrammeEnrolmentFactory
-programmeEnrolmentList: ProgrammeEnrolmentListFactory
+ProgrammeEnrolmentRepository(programmeEnrolmentFactory: ProgrammeEnrolmentFactoryImpl, programmeEnrolmentRepositoryListFactory ProgrammeEnrolmentRepositoryList)
+enrolStudents(student: Student, accessMethod: AccessMethod, programme: Programme, enrolmentDate: String)
}

interface IProgrammeEnrolmentRepository {
Student getStudentByUniqueNumber(String uniqueNumber);
}

interface IProgrammeEnrolmentListFactory {
+newArrayList()
}

class ProgrammeEnrolmentRepositoryListFactoryImpl {
+newArrayList()
}

class ProgrammeEnrolmentFactoryImpl {
+createProgrammeEnrolment(student: Student, accessMethod: AccessMethod, programme: Programme, date: String)
}

interface IProgrammeEnrolmentFactory {
+createProgrammeEnrolment(student: Student, accessMethod: AccessMethod, programme: Programme, date: String)
}

class List<ProgrammeEnrolment> {
}

IStudentRepository  -.>  "<<root>>\nStudent"
IAccessMethodRepository  -.>  "<<root>>\nAccessMethod"
IProgrammeRepository  -.>  "<<root>>\nProgramme"
IProgrammeEnrolmentFactory "1" .u.> " \ncreates" "<<root>>\nProgrammeEnrolment"
IProgrammeEnrolmentRepository "1" ..> "1" IProgrammeEnrolmentFactory
IProgrammeEnrolmentFactory <|.. ProgrammeEnrolmentFactoryImpl
IProgrammeEnrolmentListFactory <-- "1" IProgrammeEnrolmentRepository
IProgrammeEnrolmentListFactory <|.u. ProgrammeEnrolmentRepositoryListFactoryImpl
IProgrammeEnrolmentRepository "1" --> "1" List
IProgrammeEnrolmentListFactory  ..> "creates\n" List
List --> "1" "<<root>>\nProgrammeEnrolment"

US09_EnrolStudentInProgrammeController "1" -.> "1" IStudentRepository
StudentRepository <|.- IStudentRepository
US09_EnrolStudentInProgrammeController "1" -.> "1" IAccessMethodRepository
AccessMethodRepository <|.- IAccessMethodRepository
US09_EnrolStudentInProgrammeController "1" -.> "1" IProgrammeRepository
ProgrammeRepository <|.- IProgrammeRepository
US09_EnrolStudentInProgrammeController "1" -.> "1" IProgrammeEnrolmentRepository

IProgrammeEnrolmentRepository .u.|> ProgrammeEnrolmentRepository
"<<root>>\nProgrammeEnrolment" --> "<<VO>>\nUniqueNumber"
"<<root>>\nProgrammeEnrolment" --> "<<VO>>\nProgrammeName"
"<<root>>\nProgrammeEnrolment" --> "<<VO>>\nAccessMethodName"

@enduml
