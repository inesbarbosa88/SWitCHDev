-- ** eliminar tabelas se existentes **
-- CASCADE CONSTRAINTS para eliminar as restrições de integridade das chaves primárias e chaves únicas
-- PURGE elimina a tabela da base de dados e da "reciclagem"
DROP TABLE cd       CASCADE CONSTRAINTS PURGE;
DROP TABLE musicas  CASCADE CONSTRAINTS PURGE;
DROP TABLE editoras CASCADE CONSTRAINTS PURGE;

-- ## tabela Editores ##
CREATE TABLE editoras (
    id_editora  INTEGER     CONSTRAINT pk_editoras_id_editora PRIMARY KEY,
    nome        VARCHAR(20) CONSTRAINT nn_editoras_nome NOT NULL 
);

-- ## tabela CD ##
CREATE TABLE cd (
    cod_cd          INTEGER     CONSTRAINT pk_cd_cod PRIMARY KEY,
    id_editora      INTEGER,
    titulo          VARCHAR(40) CONSTRAINT nn_cd_titulo NOT NULL,
    data_compra     DATE,
    valor_pago      NUMERIC(5,2),
    local_compra    VARCHAR(20)
);

-- ## tabela Musicas ##
CREATE TABLE musicas (
    nr_musica   INTEGER,
    cod_cd      INTEGER,
    titulo      VARCHAR(40) CONSTRAINT nn_musicas_titulo NOT NULL,
    interprete  VARCHAR(30) CONSTRAINT nn_musicas_interprete NOT NULL,
    duracao     NUMERIC(5,2),                                               

    CONSTRAINT pk_musicas_nr_musica_cod_cd  PRIMARY KEY (cod_cd, nr_musica)
);

-- ** alterar tabelas para definição de chaves estrangeiras **
ALTER TABLE cd        ADD CONSTRAINT fk_cd_id_editora   FOREIGN KEY (cod_cd)  REFERENCES editoras(id_editora);
ALTER TABLE musicas   ADD CONSTRAINT fk_musicas_cod_cd  FOREIGN KEY (cod_cd)  REFERENCES cd(cod_cd);

-- ** inserir dados nas tabelas **

-- ## tabela Editores ##
INSERT INTO editoras(id_editora, nome) 
     VALUES (1, 'BMG');
INSERT INTO editoras(id_editora, nome) 
     VALUES (2, '4AD');
INSERT INTO editoras(id_editora, nome) 
     VALUES (3, 'Polydor');
INSERT INTO editoras(id_editora, nome) 
     VALUES (4, 'Universal Music');
INSERT INTO editoras(id_editora, nome) 
     VALUES (5, 'Warner Music');
INSERT INTO editoras(id_editora, nome) 
     VALUES (6, 'Island Records');
INSERT INTO editoras(id_editora, nome) 
     VALUES (7, 'Parlaphone');
INSERT INTO editoras(id_editora, nome) 
     VALUES (8, 'ADF');
INSERT INTO editoras(id_editora, nome) 
     VALUES (9, 'Valentim de Carvalho');

-- ## tabela CD ##
INSERT INTO cd(cod_cd, id_editora, titulo, data_compra, valor_pago, local_compra) 
     VALUES (1, 8, 'Punkzilla', TO_DATE('22/04/2011','DD/MM/YY'), 55.00 , 'FNAC');
INSERT INTO cd(cod_cd, id_editora, titulo, data_compra, valor_pago, local_compra) 
     VALUES (2, 1, 'Classic Duets', TO_DATE('21/05/2017','DD/MM/YY'), 30.50, 'Worten');
INSERT INTO cd(cod_cd, id_editora, titulo, data_compra, valor_pago, local_compra) 
     VALUES (3, 7, 'The Wall', TO_DATE('22/04/2011','DD/MM/YY'), 25.80, 'FNAC');
INSERT INTO cd(cod_cd, id_editora, titulo, data_compra, valor_pago, local_compra) 
     VALUES (4, 1, 'Hits 4', TO_DATE('10/09/2017','DD/MM/YY'), 42.30, 'Worten');
INSERT INTO cd(cod_cd, id_editora, titulo, data_compra, valor_pago, local_compra) 
     VALUES (5, 6, 'Songs of Experience', TO_DATE('1/01/2018','DD/MM/YY'), 10.99, NULL);
INSERT INTO cd(cod_cd, id_editora, titulo, data_compra, valor_pago, local_compra) 
     VALUES (6, 5, 'Giesta 2', TO_DATE('15/06/2017','DD/MM/YY'), 9.10, NULL);
INSERT INTO cd(cod_cd, id_editora, titulo, data_compra, valor_pago, local_compra) 
     VALUES (7, 4, 'O Mundo ao Contr rio', TO_DATE('01/01/2004','DD/MM/YY'), 12.90, 'FNAC');
INSERT INTO cd(cod_cd, id_editora, titulo, data_compra, valor_pago, local_compra) 
     VALUES (8, 3, 'Born to Die', TO_DATE('27/01/2012','DD/MM/YY'), 9.90, 'iTunes');

-- ## tabela Musicas ##
--CD 1
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (1, 1, 'Dream of Waking', 'AFI', 3.05);
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (2, 1, 'Still', 'Rufio', 3.02);
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (3, 1, 'Behind the Music', 'The Vandals', 2.41);
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (4, 1, 'Why Are You Alive', 'The Vandals', 2.34);
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (5, 1, 'Vandals', 'The Vandals', 4.01);
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (6, 1, 'Days of the Phoenix', 'AFI', 3.28);
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (7, 1, 'Wester', 'AFI', 3.02);
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (8, 1, 'Blue Jeans', 'Lana Del Rey', 3.29);
--CD 2
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (1, 2, 'Bizet: Les p cheurs de perles...', 'Orquestra Filarm nica Real', 5.24);
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (2, 2, 'Verdi: Otello/Act 2', 'Orquestra Sinf nica Chicago', 6.47);
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (3, 2, 'Verdi: Aida/Act 4', 'Loring Maazel', 4.38);
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (4, 2, 'Puccini: Turandot', 'Zubin Mehta', 3.08);
--CD 3
INSERT INTO musicas(nr_musica, cod_cd, titulo, interprete, duracao) 
     VALUES (1, 3, 'In the Flesh', 'Pink Floyd', 3.02);
INSERT INTO musicas 
     VALUES (2, 3, 'The Thin Lee', 'Pink Floyd', 2.30);
INSERT INTO musicas 
     VALUES (3, 3, 'Mother', 'Pink Floyd', 5.34);
INSERT INTO musicas 
     VALUES (4, 3, 'Don''t Leave Me Now', 'Pink Floyd', 4.21);
INSERT INTO musicas 
     VALUES (5, 3, 'Young Lust', 'Pink Floyd', 3.19);
--CD 4
INSERT INTO musicas 
     VALUES (1, 4, 'It''s Alright(Baby''s Coming Back)', 'Eurythmics', 3.05);
INSERT INTO musicas 
     VALUES (2, 4, 'Hounds of Love' , 'Kate Bush', 3.02);
INSERT INTO musicas 
     VALUES (3, 4, 'Calling America', 'Electric Light Orchestra', 2.41);
INSERT INTO musicas 
     VALUES (4, 4, 'Suspicious Minds', 'Fine Young Cannibals', 2.34);
INSERT INTO musicas 
     VALUES (5, 4, 'I''m Your Man', 'Wham!', 3.28);
INSERT INTO musicas 
     VALUES (6, 4, 'Blue Jeans', 'Lana Del Rey', 3.29);
--CD 5
INSERT INTO musicas 
     VALUES (1, 5, 'Love is All We Have Left', 'U2', 2.41);
INSERT INTO musicas 
     VALUES (2, 5, 'Lights of Home' , 'U2', 4.16);
INSERT INTO musicas 
     VALUES (3, 5, 'You''re the Best Thing About Me', 'U2', 3.45);
INSERT INTO musicas 
     VALUES (4, 5, 'Get Out of Your Own Way', 'U2', 3.58);
INSERT INTO musicas 
     VALUES (5, 5, 'American Soul', 'U2', 4.21);
INSERT INTO musicas 
     VALUES (6, 5, 'Summer of Love', 'U2', 3.24);
INSERT INTO musicas 
     VALUES (7, 5, 'Red Flag Day', 'U2', 3.19);
INSERT INTO musicas 
     VALUES (8, 5, 'The Showman', 'U2', 3.23);
--CD 6
INSERT INTO musicas 
    VALUES (1, 6, 'Valsa em Espiral', 'Miguel Ara jo', 3.34);
INSERT INTO musicas 
     VALUES (2, 6, '1987' , 'Miguel Ara jo', 4.12);
INSERT INTO musicas 
     VALUES (3, 6, 'Meio Conto', 'Miguel Ara jo', 3.13);
INSERT INTO musicas 
     VALUES (4, 6, 'Via Norte', 'Miguel Ara jo', 3.35);
INSERT INTO musicas 
     VALUES (5, 6, 'Sangemil', 'Miguel Ara jo', 4.03);
INSERT INTO musicas 
     VALUES (6, 6, 'Lurdes Valsa Lenta', 'Miguel Ara jo', 4.41);
INSERT INTO musicas 
     VALUES (7, 6, 'Axl Rose', 'Miguel Ara jo', 5.03);
INSERT INTO musicas 
     VALUES (8, 6, '20% Mais', 'Miguel Ara jo', 1.20);
INSERT INTO musicas 
     VALUES (9, 6, 'V ndalo', 'Miguel Ara jo', 4.45);
INSERT INTO musicas 
     VALUES (10, 6, 'Aqui Dali', 'Miguel Ara jo', 4.45);
--CD 7
INSERT INTO musicas 
     VALUES (1, 7, 'Desejo', 'Xutos e Pontap s', 3.25);
INSERT INTO musicas 
     VALUES (2, 7, 'Diz-me' , 'Xutos e Pontap s', 4.37);
INSERT INTO musicas 
     VALUES (3, 7, 'Ai Se Ele Cai', 'Xutos e Pontap s', 3.12);
INSERT INTO musicas 
     VALUES (4, 7, 'Pequeno Pormenor', 'Xutos e Pontap s', 2.58);
INSERT INTO musicas 
     VALUES (5, 7, 'Zona Limite', 'Xutos e Pontap s', 3.27);
INSERT INTO musicas 
     VALUES (6, 7, 'Fim de Semana', 'Xutos e Pontap s', 5.27);
INSERT INTO musicas 
     VALUES (7, 7, 'Gota a Gota', 'Xutos e Pontap s', 2.35);
INSERT INTO musicas 
     VALUES (8, 7, 'Teimosia', 'Xutos e Pontap s', 4.13);
INSERT INTO musicas 
     VALUES (9, 7, 'O Mundo ao Contr rio', 'Xutos e Pontap s', 4.18);
INSERT INTO musicas 
     VALUES (10, 7, 'Sombra Colorida', 'Xutos e Pontap s', 2.38);
--CD 8
INSERT INTO musicas 
     VALUES (1, 8, 'Born to Die', 'Lana Del Rey', 4.46);
INSERT INTO musicas 
     VALUES (2, 8, 'Off the Races' , 'Lana Del Rey', 4.59);
INSERT INTO musicas 
     VALUES (3, 8, 'Blue Jeans', 'Lana Del Rey', 3.29);
INSERT INTO musicas 
     VALUES (4, 8, 'Video Games', 'Lana Del Rey', 4.41);
INSERT INTO musicas 
     VALUES (5, 8, 'Diet Mountain Dew', 'Lana Del Rey', 3.42);
INSERT INTO musicas 
     VALUES (6, 8, 'National Anthen', 'Lana Del Rey', 3.50);
INSERT INTO musicas 
     VALUES (7, 8, 'Dark Paradise', 'Lana Del Rey', 4.03);
INSERT INTO musicas 
     VALUES (8, 8, 'Radio', 'Lana Del Rey', 3.34);
INSERT INTO musicas 
     VALUES (9, 8, 'Carmen', 'Lana Del Rey', 4.08);
INSERT INTO musicas 
     VALUES (10, 8, 'Million Dollar Man', 'Lana Del Rey', 3.50);
INSERT INTO musicas 
     VALUES (11, 8, 'Summertime Sadness', 'Lana Del Rey', 4.24);
INSERT INTO musicas 
     VALUES (12, 8, 'This Is What Make Us Girls', 'Lana Del Rey', 4.00);

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Criar um script para resolver as alíneas seguintes através dos operadores de conjuntos, UNION, INTERSECT e MINUS. Além disso, não usar subqueries nem operações de junção de tabelas.

1) Mostrar, numa coluna, o título de cada CD e de cada uma das músicas;
SELECT titulo FROM CD
UNION ALL
SELECT titulo FROM Musicas;


2) Copiar e alterar o comando da alínea anterior, de modo a não mostrar os registos repetidos;
SELECT titulo FROM CD
UNION
SELECT titulo FROM Musicas;


3) Copiar e alterar o comando da alínea anterior, de modo a apresentar também o comprimento de cada título e por ordem decrescente;
SELECT titulo, comprimento
FROM (
    SELECT titulo, LENGTH(titulo) AS comprimento
    FROM CD
    UNION
    SELECT titulo, LENGTH(titulo) AS comprimento
    FROM Musicas
)
ORDER BY comprimento DESC;


4) Mostrar os títulos de CD e os títulos de músicas que são iguais;
SELECT titulo
FROM CD
INTERSECT
SELECT titulo
FROM musicas;


5) Mostrar a duração das músicas dos Pink Floyd que são iguais à duração de músicas de outros
intérpretes;
SELECT duracao
FROM musicas
WHERE interprete= 'Pink Floyd'
INTERSECT
SELECT duracao
FROM MUSICAS
WHERE interprete <> 'Pink Floyd';


6) Alterar o comando da alínea anterior, de modo a mostrar a duração das músicas por ordem
decrescente;
SELECT duracao
FROM musicas
WHERE interprete= 'Pink Floyd'
INTERSECT
SELECT duracao
FROM MUSICAS
WHERE interprete <> 'Pink Floyd'
ORDER BY duracao desc;


7) Mostrar o id das editoras que não estão relacionadas com qualquer CD;
SELECT id_editora
FROM editoras
MINUS
SELECT id_editora
FROM CD;


8) Mostrar apenas a quantidade de CD comprados por local de compra;
SELECT COUNT(*) AS total_comprado
FROM CD
GROUP BY local_compra;



9) Alterar o comando da alínea anterior, de forma a não mostrar registos duplicados;
SELECT DISTINCT COUNT(*) AS total_comprado
FROM CD
GROUP BY local_compra;


10) Mostrar a quantidade de CD comprados por local de compra e o respetivo local de compra;
SELECT local_compra, COUNT(*) as quantidade_cds_comprados
FROM CD
GROUP BY local_compra;


11) Copiar e alterar o comando da alínea anterior, de forma a mostrar o resultado por ordem crescente da quantidade de CD comprados;
SELECT local_compra, COUNT(*) as quantidade_cds_comprados
FROM CD
GROUP BY local_compra
ORDER BY quantidade_cds_comprados asc;


12) Copiar e alterar o comando da alínea anterior, de forma a mostrar os registos com locais de compra conhecidos;
SELECT local_compra, COUNT(*) as quantidade_cds_comprados
FROM CD
GROUP BY local compra
HAVING local compra is not null
ORDER BY quantidade_cds_comprados asc;


13) Copiar e alterar o comando da alínea anterior, de forma a mostrar também, para cada local de compra, o valor total pago e o maior valor pago;
SELECT local_compra, COUNT(*) as quantidade_cds_comprados,SUM(valor pago), MAX(valor pago)
FROM CD
GROUP BY local compra
HAVING local compra is not null
ORDER BY quantidade_cds_comprados asc;


14) Mostrar, para cada CD e respetivos intérpretes, a quantidade de músicas do CD em que o intérprete participa. Além da quantidade referida, também deve ser apresentado o código do CD e o intérprete;
SELECT cod_cd, interprete, COUNT(*) AS quantidade_musicas
FROM musicas
GROUP BY cod_cd, interprete;



15) Copiar o comando da alínea 1 e alterar de modo a mostrar apenas as quantidades superiores a 2;
SELECT COUNT(*) AS total_comprado
FROM CD
GROUP BY local_compra
HAVING COUNT(*) > 2;


16) Mostrar os locais de compra, cuja média do valor pago por CD é inferior a 10, juntamente com o respetivo total do valor pago;
SELECT local_compra, SUM(valor_pago) as total_valor_pago
FROM CD
GROUP BY local_compra
HAVING AVG(valor_pago)<10;


17) Mostrar o valor total pago nos locais de compra, cuja quantidade de CD comprados é superior a 2. O local de compra também deve ser visualizado;
SELECT SUM(valor_pago) as total_pago, local_compra
FROM CD
GROUP BY local_compra
HAVING COUNT(*)>2;


18) Copiar o comando da alínea 7 e alterar de modo a mostrar apenas o intérprete e o código do CD em que o intérprete participa apenas em 1 música. O resultado deve ser apresentado por ordem crescente do código do CD e, em caso de igualdade, por ordem alfabética do intérprete;
SELECT cod_cd, interprete
FROM musicas
GROUP BY cod_cd, interprete
HAVING COUNT(interprete)=1
ORDER BY cod_cd asc, interprete asc;


19) Copiar o comando da alínea anterior e alterar de modo a mostrar apenas os intérpretes começados por E ou L (letras maiúsculas ou minúsculas);
SELECT  DISTINCT cod_cd, interprete
FROM musicas
WHERE UPPER(interprete) LIKE 'E%' OR UPPER(interprete) LIKE 'L%'
ORDER BY cod_cd ASC, interprete ASC;


20) Mostrar, para cada CD, o título e a quantidade de músicas;
SELECT cd.titulo, COUNT(musicas.nr_musica) AS quantidade_musicas
FROM cd, musicas
WHERE cd.cod_cd = musicas.cod_cd
GROUP BY cd.titulo;


21) Mostrar, para cada CD, o código, o título e a quantidade de músicas;
SELECT CD.cod_cd, CD.titulo, COUNT(musicas.nr_musica) AS quantidade_musicas
FROM CD, musicas
WHERE CD.cod_cd = musicas.cod_cd
GROUP BY CD.cod_cd, CD.titulo;


22) Mostrar, para cada CD, o código, o título e a quantidade de músicas cuja duração é superior a 5;
SELECT DISTINCT (CD.cod_cd), CD.titulo, COUNT(musicas.nr_musica) AS quantidade_musicas
FROM CD, musicas
WHERE CD.cod_cd = musicas.cod_cd
GROUP BY CD.cod_cd, CD.titulo, musicas.duracao
HAVING musicas.duracao > 5;


23) Mostrar, para cada CD com menos de 6 músicas, o código, o título e a quantidade de músicas do CD;
SELECT DISTINCT (CD.cod_cd), CD.titulo, COUNT(musicas.nr_musica) AS quantidade_musicas
FROM CD, musicas
WHERE CD.cod_cd = musicas.cod_cd
GROUP BY CD.cod_cd, CD.titulo
HAVING COUNT(musicas.nr_musica) < 6;



24) Mostrar, para cada CD cujas músicas têm uma duração média superior a 4, o código, o título e a quantidade de músicas do CD.
SELECT CD.cod_cd, CD.titulo, COUNT(musicas.nr_musica) as quantidade_musicas
FROM CD, musicas
WHERE cd.cod_cd = musicas.cod_cd
GROUP BY cd.cod_cd, CD.titulo
HAVING AVG(musicas.duracao)>4;


