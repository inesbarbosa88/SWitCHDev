EXERCICIOS CD MUSICA:
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

-eliminar tabelas (eventualmente) existentes

DROP TABLE cd CASCADE CONSTRAINTS PURGE;
DROP TABLE musica CASCADE CONSTRAINTS PURGE;

--criar tabelas

CREATE TABLE cd (
    codCd          INTEGER CONSTRAINT pkCdCod PRIMARY KEY,
    titulo         VARCHAR(40) CONSTRAINT nnCdTitulo NOT NULL,
    dataCompra     DATE,
    valorPago      NUMERIC(5,2),
    localCompra    VARCHAR(20)
);

CREATE TABLE musica (
    nrMusica    INTEGER,
    codCd       INTEGER,    
    titulo      VARCHAR(40) CONSTRAINT nnMusicaTitulo NOT NULL,
    interprete  VARCHAR(30) CONSTRAINT nnMusicaInterprete NOT NULL,
    duracao     NUMERIC(4,2),
    
    CONSTRAINT pkMusicaNrMusicaCodCd  PRIMARY KEY (codCd, nrMusica)
);

ALTER TABLE musica ADD CONSTRAINT fkMusicaCodCd FOREIGN KEY (codCd) REFERENCES cd (codCd);

--preencher tabelas

INSERT INTO cd VALUES (1, 'Punkzilla', TO_DATE('22/April/2013','DD/MON/YY'), 55.00 , 'FNAC');
INSERT INTO cd VALUES (2, 'Classic Duets', TO_DATE('21/May/2019','DD/MON/YY'), 30.50, 'Worten');
INSERT INTO cd VALUES (3, 'The Wall', TO_DATE('22/April/2013','DD/MON/YY'), 25.80, 'FNAC');
INSERT INTO cd VALUES (4, 'Hits 4', TO_DATE('10/September/2019','DD/MON/YY'), 42.30, 'Worten');
INSERT INTO cd VALUES (5, 'Songs of Experience', TO_DATE('1/January/2020','DD/MON/YY'), 10.99, NULL);
INSERT INTO cd VALUES (6, 'Giesta 2', TO_DATE('15/June/2019','DD/MON/YY'), 9.10, NULL);

INSERT INTO musica VALUES (1, 1, 'Dream of Waking', 'AFI', 3.05);
INSERT INTO musica VALUES (2, 1, 'Still', 'Rufio', 3.02);
INSERT INTO musica VALUES (3, 1, 'Behind the Music', 'The Vandals', 2.41);
INSERT INTO musica VALUES (4, 1, 'Why Are You Alive', 'The Vandals', 2.34);
INSERT INTO musica VALUES (5, 1, 'Vandals', 'The Vandals', 4.01);
INSERT INTO musica VALUES (6, 1, 'Days of the Phoenix', 'AFI', 3.28);
INSERT INTO musica VALUES (7, 1, 'Wester', 'AFI', 3.02);

INSERT INTO musica VALUES (1, 2, 'Bizet: Les pecheurs de perles...', 'Orquestra Filarmonica Real', 5.24);
INSERT INTO musica VALUES (2, 2, 'Verdi: Otello/Act 2', 'Orquestra Sinfonica Chicago', 6.47);
INSERT INTO musica VALUES (3, 2, 'Verdi: Aida/Act 4', 'Loring Maazel', 4.38);
INSERT INTO musica VALUES (4, 2, 'Puccini: Turandot', 'Zubin Mehta', 3.08);

INSERT INTO musica VALUES (1, 3, 'In the Flesh', 'Pink Floyd', 3.20);
INSERT INTO musica VALUES (2, 3, 'The Thin Lee', 'Pink Floyd', 2.30);
INSERT INTO musica VALUES (3, 3, 'Mother', 'Pink Floyd', 5.34);
INSERT INTO musica VALUES (4, 3, 'Don''t Leave Me Now', 'Pink Floyd', 4.17);
INSERT INTO musica VALUES (5, 3, 'Young Lust', 'Pink Floyd', 3.33);

INSERT INTO musica VALUES (1, 4, 'It''s Alright(Baby''s Coming Back)', 'Eurythmics', 3.05);
INSERT INTO musica VALUES (2, 4, 'Hounds of Love' , 'Kate Bush', 3.02);
INSERT INTO musica VALUES (3, 4, 'Calling America', 'Electric Light Orchestra', 2.41);
INSERT INTO musica VALUES (4, 4, 'Suspicious Minds', 'Fine Young Cannibals', 2.34);
INSERT INTO musica VALUES (5, 4, 'I''m Your Man', 'Wham!', 3.28);

INSERT INTO musica VALUES (1, 5, 'Love is All We Have Left', 'U2', 2.41);
INSERT INTO musica VALUES (2, 5, 'Lights of Home' , 'U2', 4.16);
INSERT INTO musica VALUES (3, 5, 'You''re the Best Thing About Me', 'U2', 3.45);
INSERT INTO musica VALUES (4, 5, 'Get Out of Your Own Way', 'U2', 3.58);
INSERT INTO musica VALUES (5, 5, 'American Soul', 'U2', 4.21);
INSERT INTO musica VALUES (6, 5, 'Summer of Love', 'U2', 3.24);
INSERT INTO musica VALUES (7, 5, 'Red Flag Day', 'U2', 3.19);
INSERT INTO musica VALUES (8, 5, 'The Showman', 'U2', 3.23);

INSERT INTO musica VALUES (1, 6, 'Valsa em Espiral', 'Miguel Araujo', 3.34);
INSERT INTO musica VALUES (2, 6, '1987' , 'Miguel Araujo', 4.12);
INSERT INTO musica VALUES (3, 6, 'Meio Conto', 'Miguel Araujo', 3.13);
INSERT INTO musica VALUES (4, 6, 'Via Norte', 'Miguel Araujo', 3.35);
INSERT INTO musica VALUES (5, 6, 'Sangemil', 'Miguel Araujo', 4.03);
INSERT INTO musica VALUES (6, 6, 'Lurdes Valsa Lenta', 'Miguel Araujo', 4.41);
INSERT INTO musica VALUES (7, 6, 'Axl Rose', 'Miguel Araujo', 5.03);
INSERT INTO musica VALUES (8, 6, '20% Mais', 'Miguel Araujo', 1.20);
INSERT INTO musica VALUES (9, 6, 'Vandalo', 'Miguel Araujo', 4.45);
INSERT INTO musica VALUES (10, 6, 'Aqui Dali', 'Miguel Araujo', 4.45);


-- COMMIT; 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

1) Mostrar todos os dados da tabela CD; 
-- Select * from CD;

2) Mostrar todos os dados da tabela Musica;
-- Select * from musica;

3) Mostrar o título e a data de compra de todos os CD;
-- Select titulo, datacompra from CD;


4) Mostrar a data de compra de todos CD;
-- Select datacompra from CD;


5) Mostrar o resultado da alínea anterior, mas sem registos repetidos;
-- Select distinct datacompra from CD;


6) Mostrar o código dos CD e os respetivos intérpretes, sem registos repetidos;
-- Select distinct codcd, interprete from CD;


7) Mostrar o resultado anterior com a primeira coluna intitulada "Código do CD";

-- Select distinct codcd "Código do CD", interprete from musica;


8) Mostrar o título, o valor pago e o respetivo valor do IVA de todos os CD. O valor do IVA é calculado de
acordo com a seguinte fórmula: valor do IVA = (valor pago * 0.23) / 1.23.

-- Select titulo, valorpago, round (((valorpago*0.23)/1.23),2) IVA from cd;


9) Mostrar todos os dados das músicas do CD com o código 2;
-- Select * from musica Where codcd=2;


10) Mostrar todos os dados das músicas que não pertencem ao CD com o código 2;
-- Select * from musica Where codcd<>2;


11) Mostrar todos os dados das músicas do CD com o código 2 cuja duração seja superior a 5;

--Select * from musica Where codcd=2 and duracao>5;


12) Mostrar todos os dados das músicas do CD com o código 2 cuja duração pertença ao intervalo [4,6];

-- Select * from musica Where codcd=2 and duracao>=4 and duracao<=6;


13) Mostrar todos os dados das músicas do CD com o código 2 cuja duração seja inferior a 4 ou superior a 6;

-- Select * from musica Where codcd=2 and duracao<4 and duracao>6;


14) Mostrar todos os dados das músicas com o número: 1, 3, 5 ou 6;
-- Select * from musica WHERE nrmusica in (1, 3, 5, 6);


15) Mostrar todos os dados das músicas com o número diferente de 1, 3, 5 e 6;
-- Select * from musica WHERE nrmusica not in (1, 3, 5, 6);


16) Mostrar todos os dados das músicas cujo intérprete é uma orquestra;
-- Select * from musica WHERE interprete LIKE 'Orquestra%';


17) Mostrar todos os dados das músicas cujo nome do intérprete tem a letra Y;
-- Select * from musica WHERE interprete LIKE '%y%';


18) Mostrar todos os dados das músicas cujo nome termina com DAL?, sendo ? qualquer caráter;
-- Select * from musica WHERE UPPER(TRIM(titulo)) LIKE '%DAL%';


19) Mostrar todos os dados das músicas cujo título é iniciado pela letra B, D ou H;
-- Select distinct * FROM musicas WHERE titulo LIKE 'B%' OR titulo LIKE 'D%' OR titulo LIKE 'H%';


20) Mostrar todos os dados dos CD sem o local de compra registado;
-- Select * from CD WHERE localcompra is null;


21) Mostrar todos os dados dos CD com o local de compra registado.
--  Select * from CD WHERE localcompra is not null;


22) Mostrar os títulos dos CD comprados na FNAC;
-- Select titulo from CD WHERE localcompra= 'FNAC';


23) Mostrar os títulos dos CD que não foram comprados na FNAC;
-- Select titulo from CD WHERE localcompra <> 'FNAC' OR localcompra IS NULL;



24) Mostrar os títulos dos CD que não foram comprados na FNAC, por ordem alfabética inversa; 
-- Select titulo from CD WHERE localcompra <> 'FNAC' OR localcompra IS NULL order by titulo desc;


25) Mostrar o título e a data de compra dos CD, por ordem alfabética do título do CD;
-- Select titulo, datacompra from CD order by titulo;


26) Mostrar o título e a data de compra dos CD, por ordem descendente da data de compra do CD;
-- Select titulo, datacompra from CD order by datacompra desc;


27) Mostrar o título e o local de compra dos CD, por ordem ascendente do local de compra do CD;
-- Select titulo, localcompra from CD order by localcompra;


28) Mostrar o resultado da alínea anterior, mas por ordem descendente do local de compra do CD;
-- Select titulo, localcompra from CD order by localcompra desc;

29) Mostrar o título, o valor pago e o respetivo valor do IVA dos CD, por ordem decrescente do IVA;
-- Select titulo, valorpago, ((valorpago*0.23)/1.23) IVA from CD order by IVA desc;


30) Mostrar o título do CD por ordem descendente da data de compra e, no caso da igualdade de datas, por ordem alfabética do título;
-- Select titulo, datacompra from CD order by datacompra desc, titulo;


31) Mostrar a quantidade de músicas;
-- Select Count (nrMusica) as quantidade_musicas from musica; 


32) Mostrar a quantidade de locais de compra distintos;
-- Select count (distinct localcompra) from cd;


33) Mostrar o total gasto com a compra de todos os CD, o maior e o menor valor pago por um CD;
-- Select SUM (valorPago) as totalGasto, MAX (valorpago) as maiorValorPago, MIN (valorpago) as menorValorPago from CD;


34) Mostrar a média da duração de todas as músicas;
-- Select AVG (duracao) from musica;


35) Mostrar o total do valor pago na FNAC;
-- Select SUM (valorPago) as totalGasto from CD WHERE localcompra= 'FNAC';


36) Mostrar a diferença entre o maior e o menor valor pago na FNAC.
-- Select MAX(valorpago)-MIN(valorpago) from cd where localcompra='FNAC';


37) Mostrar, para cada CD e respetivos intérpretes, a quantidade de músicas do CD;
-- Select 
	cd.titulo as titulo_cd,
	musica.interprete as nome interprete,
	COUNT (musica.nrmusica) as quantidade musicas
   From
	cd
   JOIN
	musica ON cd.codcd = musica.codcd
   GROUP BY
	cd.titulo, musica.interprete;


38) Mostrar a quantidade de CD comprados por local de compra e o respetivo local de compra;
-- Select 
	COUNT (titulo) as quantidade_cds,
	localcompra as local_compra
   FROM 
	CD
   GROUP BY
	localcompra;

39) Mostrar os locais de compra, cuja média do valor pago por CD é inferior a 10, juntamente com o respetivo total do valor pago;

-- Select 
	localcompra as local_compra,
	AVG(valorpago) as media_valor_pago,
	SUM(valorpago) as total_pago
   FROM
	CD
   GROUP BY
	localcompra
   
   HAVING
	AVG(valorpago) < 10;
   

40) Mostrar o valor total pago nos locais de compra, cuja quantidade de CD comprados é superior a 2. O local de compra também deve ser visualizado;
-- Select
	SUM(valorpago) as total pago,
	localcompra as local_compra
   FROM
	cd

   GROUP BY
	localcompra;
   HAVING 
	COUNT(*)>2;



